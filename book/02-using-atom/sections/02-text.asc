:compat-mode:
[[_moving_in_atom]]
=== Moving in Atom

While it's pretty easy to move around Atom by clicking with the mouse or using the arrow keys, there are some keybindings that may help you keep your hands on the keyboard and navigate around a little faster.

First of all, Atom ships with many of the basic Emacs keybindings for navigating a document. To go up and down a single character, you can use `cntl-P` and `cntl-N`. To go left and right a single character, you can use `cntl-B` and `cntl-F`. These are the equivalent of using the arrow keys, though some people prefer to not have to move their hands to where the arrow keys are located on their keyboard.

In addition to single character movement, there are a number of other movement keybindings.

* move to beginning of word `alt-B`, `alt-left`
* move to end of word `alt-F`, `alt-right`
* move to end of line `cmd-right`, `cntl-E`
* move to first character of line `cmd-left`, `cntl-A`
* move to top `cmd-up`
* move to bottom `cmd-down`

You can also move directly to a specific line (and column) number with `cntl-G`. This will bring up a dialog that asks which line you would like to jump to. You can also use the `row:column` syntax to jump to a character in that line as well.

.Go directly to a line
image::images/goto.png[Go to line]

==== Navigating by Symbols

You can also jump around a little more informatively. To jump to a symbol such as a method definition, press `cmd-r`. This opens a list of all symbols in the current file, which you can fuzzy filter similarly to `cmd-t`. To search for symbols across your project, use `cmd-shift-r`.

.Search by symbol across your project
image::images/symbol.png[Search by symbol across your project]

First you'll need to make sure you have `tags` (or `TAGS`) file generated for your project. This can be done by installing http://ctags.sourceforge.net[ctags] and running a command such as `ctags -R src/` from the command line in your project's root directory.

If you're on a Mac using http://brew.sh/[Homebrew], you can just run `brew install ctags`.

You can customize how tags are generated by creating your own `.ctags` file in your home directory (`~/.ctags`). An example can be found https://github.com/atom/symbols-view/blob/master/lib/.ctags[here].

[[_atom_bookmarks]]
==== Atom Bookmarks

Atom also has a great way to bookmark specific lines in your project so you can jump back to them quickly.

If you press `cmd-F2`, Atom will toggle a ``bookmark'' on the current line. You can set these throughout your project and use them to quickly find and jump to important lines of your project. A small bookmark symbol is added to the line gutter, like on line 73 of <<_bookmarks_image>>.

If you hit `F2`, Atom will jump to the next bookmark in the file you currently have focused. If you use `shift-F2` it will cycle backwards through them instead.

You can also see a list of all your projects current bookmarks and quickly filter them and jump to any of them by hitting `cntl-F2`.

[[_bookmarks_image]]
.View and filter bookmarks.
image::images/bookmarks.png[]


[[_atom_selections]]
=== Atom Selections

Selections mirror many of the movement commands.

* select to beginning/end of word
* select to next word boundry
* select to top/bottom
* select to beginning/end of line
* select to first character of line
* select to next/prev word
* select to beginning of next/prev paragraph

`cntl-cmd-G` - select all words in document that are the same as under the cursor, so you can change them all at the same time

[[_working_with_text]]
=== Editing and Deleting Text

==== Basic Manipulation

transpose - `cntl-T`

join lines - `cmd-J`

`cntl-cmd-up`, `cntl-cmd-down` - moves lines up and down

duplicate lines - `cmd-shift-D`

case - `cmd-K, cmd-U`, `cmd-K, cmd-L`


==== Deleting and Cutting

delete line - `cntl-shift-K`

delete to end of line - `cmd-delete` (cmd-fn-backspace on mac)

delete to beginning of line - `cmd-backspace`

del ben of word - `alt-backspace`, `alt-H`

del end of word - `alt-delete`, `alt-D`

cut to end of line `cntl-K`


==== Multiple Cursors

- cmd-click (add new selection)
- cmd-shift-L (selection to cursors)
- cntl-shift-up (add cursor up/down)


==== Whitespace

convert spaces/tabs, remove trailing whitespace (on save)



==== Brackets

* bracket matching

==== Encoding

change encoding

`cntl-shift-U`


[[_find_replace]]
=== Find and Replace

To search within a buffer use `cmd-f`. To search the entire project use `cmd-shift-f`.




=== Autocompletion and Snippets

* autocomplete
* snippets
* emmet, autocomplete+
