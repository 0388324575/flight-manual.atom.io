=== The init file

When Atom finishes loading, it will evaluate `init.coffee` in your `~/.atom` directory, giving you a chance to run arbitrary personal CoffeeScript code to make customizations. You have full access to Atom's API from code in this file. If customizations become extensive, consider creating a package, which we will cover in <<_package:_word_count>>.

You can open the `init.coffee` file in an editor from the _Atom > Open Your Init Script_ menu. This file can also be named `init.js` and contain JavaScript code.

For example, if you have the Audio Beep configuration setting enabled, you could add the following code to your `init.coffee` file to have Atom greet you with an audio beep every time it loads:

[source,coffee]
----
atom.beep()
----

Because `init.coffee` provides access to Atom's API, you can use it to  implement useful commands without creating a new package or extending an existing one. Here's a command which uses the https://atom.io/docs/api/latest/Selection[Selection API] and https://atom.io/docs/api/latest/Clipboard[Clipboard API] to construct a Markdown link from the selected text and the clipboard contents as the URL:

```coffee
atom.commands.add 'atom-text-editor', 'markdown:paste-as-link', ->
  return unless editor = atom.workspace.getActiveTextEditor()

  selection = editor.getSelection()
  clipboardText = atom.clipboard.read()

  selection.insertText("[#{selection.getText()}](#{clipboardText})")
```

Now, reload Atom and use the https://atom.io/docs/latest/getting-started-atom-basics#command-palette[Command Palette] to execute the new command by name (i.e., "Markdown: Paste As Link"). And if you'd like to trigger the command via a keyboard shortcut, you can define a https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings[keymap for the command].
